// ·Éû·É†·Éù·Éî·É•·É¢·Éò 1 - Saying Hello
// function sayHello() {
//   let name = prompt("what is your name?");
//   console.log(`hello ${name} ,Nice to meet you!`);
// }
// sayHello();

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 2 - Counting the Number of Characters - ·É°·Éò·Éõ·Éë·Éù·Éö·Éù·Éî·Éë·Éò·É° ·É†·Éê·Éù·Éì·Éî·Éú·Éù·Éë·Éò·É° ·Éì·Éê·Éó·Éï·Éö·Éê
// let answer = prompt("please enter your sentence ");
// console.log(`your sentence consists from  ${answer.length} characters`);

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 3 - Printing Quotes - ·É™·Éò·É¢·Éê·É¢·Éî·Éë·Éò·É° ·Éë·Éî·É≠·Éì·Éï·Éê
// let question1 = prompt("what is the quote? ");
// let question2 = prompt("who said it? ");
// console.log(`${question2} says \"${question1}"`);

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 4 - Indoor Voice - ·É©·É£·Éõ·Éò ·ÉÆ·Éõ·Éê
// let question = prompt("what is your question");
// console.log(question.toLowerCase());

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 5 - Playback Speed - ·É°·Éê·É£·Éë·É†·Éò·É° ·É°·Éò·É©·É•·Éê·É†·Éî
// let question = prompt("what is your question");
// console.log(question.replaceAll(" ", "."));

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 6 - Making Faces - ·É°·Éê·ÉÆ·Éî·Éî·Éë·Éò·É° ·Éõ·Éò·É¶·Éî·Éë·Éê
// function convert(str) {
//   let changed = str.replaceAll(":)", "üôÇ").replaceAll(":(", "üôÅ");
//   return changed;
// }
// function main() {
//   let question = prompt(" please enter your mood");
//   return convert(question);
// }
// console.log(main());

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 7 - ·Éó·Éê·Éõ·Éê·É®·Éò Mad Libs
// let noun = prompt("Enter a noun: ");
// let verb = prompt(" Enter a verb: ");
// let adjective = prompt("Enter an adjective: ");
// let adverb = prompt("Enter an adverb: ");
// let adjective2 = prompt("Enter an adjective: ");
// console.log(
//   `do you ${noun} ${verb} ${adjective} ${adverb} ${adjective2} ? thas\`s hilarious`
// );

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 10 - ·É•·É£·Éö·Éî·Éë·Éò·É° ·Éí·Éê·Éõ·Éù·Éõ·Éó·Éï·Éö·Éî·Éö·Éò
// let score = Number(prompt("please enter yout grade "));
// if (score > 90 && score <= 100) {
//   console.log(`congratulations, you score is ${score} and your grade is A  `);
// } else if (score > 80 && score < 90) {
//   console.log(`congratulations you score is ${score} and your grade is B`);
// } else if (score > 70 && score <= 80) {
//   console.log(`congratulations your score is ${score} and your grade is c `);
// } else if (score > 60 && score <= 70) {
//   console.log(`congratulations your score is ${score} and your gradee is d`);
// } else if (score > 0 && score <= 59) {
//   console.log(
//     `unfortunately you failes, your score is ${score} and your grade is F`
//   );
// } else {
//   console.log("please enter correct score");
// }

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 11 - Simple Math - ·Éõ·Éê·É†·É¢·Éò·Éï·Éò ·Éõ·Éê·Éó·Éî·Éõ·Éê·É¢·Éò·Éô·Éê
// let firstNumber = Math. floor(Number(prompt("What is the first number? ")))
// let secondNumber =Math. floor( Number(prompt(" What is the second number? ")))
// console.log(firstNumber + secondNumber)
// console.log(firstNumber - secondNumber)
// console.log(firstNumber * secondNumber)
// console.log(Math. floor(firstNumber / secondNumber))

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 12 - Einstein - ·Éê·Éò·Éú·É®·É¢·Éê·Éò·Éú·Éò

// let lightSpeed = 300000000;
// let weight = Number(prompt('please enter your weight'));
// let answer = lightSpeed * weight
// console.log(`this is your answer ${answer}`)

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 13 - Tip Calculator - "·É©·Éê·Éò·É°" ·Éô·Éê·Éö·Éô·É£·Éö·Éê·É¢·Éù·É†·Éò

// let price = prompt("please enter your expences ")
// let tip = prompt("please enter your tip ")
// let iconRemoved =Math.floor(price.replaceAll("$",""))
//       let removed = tip.replaceAll("$","")
//     let diveded = Number(removed) / 100
//     let tipAmount =Number(iconRemoved) * diveded
//     console.log(`leave ${tipAmount} $`)

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 14 - Retirement Calculator - ·É°·Éê·Éû·Éî·Éú·É°·Éò·Éù ·Éô·Éê·Éö·Éô·É£·Éö·Éê·É¢·Éù·É†·Éò

// let currentDate = new Date();
// let currentYear = currentDate.getFullYear();
//  let userAge =Number(prompt("please enter your age "))    //asaki
//  let retireIn = Number(prompt(" At what age would you like to retire? "))
//  let timeUntilRetire =  retireIn - userAge
//  console.log(timeUntilRetire)
//  let mustWorkYears=  currentYear + timeUntilRetire
//  console.log(mustWorkYears)

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 15 - Area of a Rectangular Room - ·Éõ·Éê·É†·Éó·Éô·É£·Éó·ÉÆ·Éê ·Éù·Éó·Éê·ÉÆ·Éò·É° ·É§·Éê·É†·Éó·Éù·Éë·Éò

// let length = Number(prompt(" What is the length of the room in feet? "));
// let width = Number(prompt(" What is the width of the room in feet? "));
// let squareFoot = length * width;
// let squareMeter = Math.floor(squareFoot * 0.09290304);

// console.log(` You entered dimensions of ${length} feet by ${width} feet,the are is ${squareFoot } square feet, ${squareMeter} square meters`)

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 16 - Pizza Party - ·Éû·Éò·É™·Éò·É° ·É¨·Éï·Éî·É£·Éö·Éî·Éë·Éê

// let peopleAmount = Number(prompt("> How many people? "));
// let pizaAmount = Number(prompt("How many pizzas do you have? "));
// let pizaSlices = Number(prompt("how many slices does piza have ?"));
// function counter(people, piza, slices) {
//   let allSlices = piza * slices;
//   let slicesPerPerson = Math.floor(allSlices / people);
//   let leftOver = allSlices % people;
//   return [
//     `you  will have ${slicesPerPerson} slices per person and leftover is ${leftOver}`,
//   ];
// }
// console.log(counter(peopleAmount, pizaAmount, pizaSlices));

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 17 - Grocery List - ·É°·Éê·É°·É£·É†·É°·Éê·Éó·Éù ·É°·Éò·Éê
// function foo() {
//   let item;
//   let arr = [];
//   for (; true; ) {
//     item = prompt("what i have to bye ?");
//     if (item === "") {
//       break;
//     }
//     arr.push(item);
//   }
//   let obj = {};
//   for (let i = 0; i < arr.length; i++) {
//     if (!obj.hasOwnProperty(arr[i])) {
//       obj[arr[i]] = 1;
//     } else {
//       obj[arr[i]] += 1;
//     }
//   }
//   return obj;
// }
// console.log(foo());

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 18 - Adieu, adieu - ·Éõ·É®·Éï·Éò·Éì·Éù·Éë·Éò·Éó, ·Éõ·É®·Éï·Éò·Éì·Éù·Éë·Éò·Éó

// let question = prompt("what is your name? ");
// let arr = [];
// for (; true; ) {
//   let question = prompt("what is your name? ");
//   if (question === "") {
//     break;
//   }
//   arr.push(question);
// }
// console.log(`Adieu, adieu, to ${arr}`);

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 19 - Paint Calculator - ·É°·Éê·É¶·Éî·Éë·Éê·Éï·Éò·É° ·Éô·Éê·Éö·Éô·É£·Éö·Éê·É¢·Éù·É†·Éò

// let length = prompt("what is your length ?");
// let width = prompt("what is your width ?");
// let squareMeter = length * width;
// let quantity = Math.ceil(squareMeter / 360);
// console.log(quantity);

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 20 - Self-Checkout - ·Éó·Éï·Éò·Éó-·Éí·Éê·Éì·Éê·ÉÆ·Éì·Éê

// let firstPrice = Number(prompt(" Enter the price of item 1 "));
// let firstQuantity = Number(prompt(" Enter the quantity of item 1 "));
// let secondPrice = Number(prompt("Enter the price of item 2 "));
// let secondQuantity = Number(prompt("Enter the quantity of item 2 "));
// let thirdPrice = Number(prompt("Enter the price of item 3 "));
// let thirdQuantity = Number(prompt("Enter the quantity of item 3 "));
// let firstTotal = firstPrice * firstQuantity;
// let secondTotal = secondPrice * secondQuantity;
// let thirdTotal = thirdPrice * thirdQuantity;
// let subTotal = firstTotal + secondTotal + thirdTotal;
// let tax = subTotal * 0.055;
// let total = subTotal + tax;
// console.log(subTotal);
// console.log(tax);
// console.log(total);

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 21 - Currency Conversion - ·Éï·Éê·Éö·É£·É¢·Éò·É° ·Éô·Éù·Éú·Éï·Éî·É†·É¢·Éê·É™·Éò·Éê
// let amountFrom = Number(prompt(" How many euros are you exchanging? "))
// let rateFrom = Number(prompt("What is the exchange rate of euro? "))
// let rateTo = Number(prompt("What is the exchange rate of dollar? "))
//  let amountTo = (amountFrom * rateFrom) / rateTo

//  console.log(`${amountFrom} euros at an exchange rate of ${rateFrom} is ${amountTo} U.S dollars`)

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 23 - Determining Compound Interest - ·É†·Éó·É£·Éö·Éò ·Éû·É†·Éù·É™·Éî·Éú·É¢·Éò·É° ·Éí·Éê·Éõ·Éù·Éó·Éï·Éö·Éê
// let investment = Number(prompt(" What is the principal amount? "))
// let anualRate = Number(prompt("What is the rate? "))
// let numberOfYears = Number(prompt("What is the number of years? "))
// let rateAmountPerYear = Number(prompt(" What is the number of times the interest is compounded per year? "))

//  let totalInvestment = investment * (1+ anualRate / rateAmountPerYear )*rateAmountPerYear * numberOfYears
//  console.log(`${investment} invested at  ${anualRate} 6 years compounded   ${rateAmountPerYear} per year is  ${totalInvestment}`)

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 24 - Deep Thought - ·É¶·É†·Éõ·Éê ·É§·Éò·É•·É†·Éò

// let answer = "forty-two";
// let answer1 = "forty two";
// let answer2 = "42";
// for (; true; ) {
//   let question = prompt(
//     " What is the answer to the Great Question of Life, the Universe, and Everything? "
//   ).toLowerCase();
//   if (question === answer || question === answer1 || question === answer2) {
//     console.log("yes");
//   } else {
//     console.log("no");
//   }
// }

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 25 - Home Federal Saving Bank - ·É§·Éî·Éì·Éî·É†·Éê·Éö·É£·É†·Éò ·Éë·Éê·Éú·Éô·Éò
// let greeting = prompt("i need some help,are you free?").toLowerCase()
// if (greeting === "hello") {
//   console.log("$0");
// } else if (greeting[0] === "h") {
//   console.log("$20");
// } else {
//  console.log("$100")
// }

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 26 - Felipe's Taqueria - ·É§·Éî·Éö·Éò·Éû·Éî·É° ·É°·Éê·É°·Éê·Éì·Éò·Éö·Éù

// let menu = {
//   "Baja Taco": 4.25,
//   Burrito: 7.5,
//   Bowl: 8.5,
//   Nachos: 11.0,
//   Quesadilla: 8.5,
//   "Super Burrito": 8.5,
//   "Super Quesadilla": 9.5,
//   Taco: 3.0,
//   "Tortilla Salad": 8.0,
// };
// // let names = Object.keys(menu);
// // let prices = Object.values(menu);
// let count = 0;
// for (;;) {
//   let answer = prompt("what are you ordering? ");
//   if (answer === "") {
//     console.log(` $ ${count}`);
//     break;
//   }
//   if (menu.hasOwnProperty(answer)) {
//     count = count + menu[answer];
//   }
// }

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 27 - Emojize - ·Éî·Éõ·Éù·ÉØ·Éî·Éë·Éê·Éì ·Éí·Éê·Éì·Éê·É•·É™·Éî·Éï·Éê

// let smilesObj = {
//   thumbs_up: "üëç",
//   earth_africa: "üåç",
//   bear: "üêª",
//   bug: "üêõ",
//   bus: "üöå",
// };
// for (;;) {
//   let answer = prompt("please enter your mood");
//   if (answer === "") {
//     break;
//   }
//   if (!smilesObj.hasOwnProperty(answer)) {
//     continue;
//   }
//   console.log(smilesObj[answer]);
// }

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 28 - File Extensions - ·É§·Éê·Éò·Éö·Éò·É° ·É¢·Éò·Éû·Éî·Éë·Éò

// let arr = [".gif", ".jpg", " .jpeg", ".png", ".pdf", ".txt", ".zip"];
// for (;;) {
//   let answer = prompt("please enter your image format");
//   if (arr.includes(answer.slice(answer.length - 4))) {
//     console.log(answer);
//   } else {
//     console.log("application/octet-stream.");
//     break;
//   }
// }

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 29 - Math Interpreter - ·Éõ·Éê·Éó·Éî·Éõ·Éê·É¢·Éò·Éô·É£·É†·Éò ·Éò·Éú·É¢·Éî·É†·Éû·É†·Éî·É¢·Éê·É¢·Éù·É†·Éò
// let input = eval(prompt("what you want to calculate?"));
// console.log(input.toFixed(2));

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 30 - Meal Time - ·Éô·Éï·Éî·Éë·Éò·É° ·Éì·É†·Éù
// let hour;
// for (;;) {
//   hour = prompt("enter your time");
//   if (hour) {
//     break;
//   }
// }
// function convertor(string) {
//   let minutes = Number(string.slice(string.length - 2));
//   let roundedMinutes = Number((minutes / 60).toFixed(2));
//   if (string[2] === ":" && string.slice(0, 2) === "12") {
//     hour = 12 + roundedMinutes;
//   }
//   if (string[1] === ":") {
//     hour = Number(string[0]) + roundedMinutes;
//   }
//   if (string[2] === ":" && string.slice(0, 2) !== "12") {
//     hour = Number(string.slice(0, 2)) + roundedMinutes;
//   }
//   return hour;
// }
// convertor(hour);

// function compare(hour) {
//   if (hour >= 7 && hour <= 8) {
//     return "it is breakfest time";
//   } else if (hour >= 12 && hour < 13) {
//     return "it is lunch time";
//   } else if (hour >= 18 && hour < 19) {
//     return "it is dinner time";
//   } else {
//     return "you can not it right now";
//   }
// }
// console.log(compare(hour));

// ·Éû·É†·Éù·Éî·É•·É¢·Éò 31 Adding Numbers
